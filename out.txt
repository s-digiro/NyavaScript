
running 311 tests
test evaluate::environment::fun_scope::test::pipe::pipe_with_no_args_returns_nil ... ok
test evaluate::environment::fun_scope::test::procedural::procedural_with_no_args_returns_nil ... ok
test evaluate::environment::fun_scope::test::pipe::pipe_works ... ok
test evaluate::environment::fun_scope::test::procedural::procedural_returns_result_of_last_evaluated_list ... ok
test evaluate::environment::fun_scope::test::pipe::pipe_returns_result_of_only_arg_when_arg_is_atom ... ok
test evaluate::environment::mccarthy_scope::test::and::and_ignores_extra_args ... ok
test evaluate::environment::mccarthy_scope::test::and::and_is_valid_code ... ok
test evaluate::environment::mccarthy_scope::test::and::and_returns_nil_when_passed_1_args ... ok
test evaluate::environment::mccarthy_scope::test::and::and_returns_nil_when_passed_1_non_nil_and_1_nil_args ... ok
test evaluate::environment::mccarthy_scope::test::and::and_returns_nil_when_passed_no_args ... ok
test evaluate::environment::mccarthy_scope::test::atom::atom_returns_1_when_called_on_nil ... ok
test evaluate::environment::mccarthy_scope::test::atom::atom_returns_1_when_called_on_number ... ok
test evaluate::environment::mccarthy_scope::test::atom::atom_returns_1_when_called_on_string ... ok
test evaluate::environment::mccarthy_scope::test::atom::atom_returns_1_when_called_on_symbol ... ok
test evaluate::environment::mccarthy_scope::test::atom::atom_returns_nil_when_called_on_function ... ok
test evaluate::environment::mccarthy_scope::test::atom::atom_returns_nil_when_called_on_list ... ok
test evaluate::environment::mccarthy_scope::test::atom::atom_returns_nil_when_called_on_macro ... ok
test evaluate::environment::mccarthy_scope::test::and::and_returns_second_arg_when_passed_2_non_nil_args ... ok
test evaluate::environment::mccarthy_scope::test::and::and_returns_nil_when_passed_2_nil_args ... ok
test evaluate::environment::mccarthy_scope::test::atom::atom_returns_nil_when_called_on_quote ... ok
test evaluate::environment::mccarthy_scope::test::atom::atom_returns_nil_when_called_on_rust_macro ... ok
test evaluate::environment::mccarthy_scope::test::car::car_returns_first_item_in_list_of_1 ... ok
test evaluate::environment::mccarthy_scope::test::car::car_returns_first_item_in_list_of_2 ... ok
test evaluate::environment::mccarthy_scope::test::car::car_returns_first_item_in_list_of_3 ... ok
test evaluate::environment::mccarthy_scope::test::car::car_returns_first_item_in_list_starting_with_list ... ok
test evaluate::environment::mccarthy_scope::test::car::car_returns_item_in_car_slot_when_called_on_cons_cell ... ok
test evaluate::environment::mccarthy_scope::test::car::car_returns_nil_from_atom ... ok
test evaluate::environment::mccarthy_scope::test::car::car_returns_nil_from_list_starting_with_nil ... ok
test evaluate::environment::mccarthy_scope::test::car::car_returns_nil_from_nil ... ok
test evaluate::environment::mccarthy_scope::test::cdr::cdr_returns_item_in_cdr_slot_when_called_on_cons_cell ... ok
test evaluate::environment::mccarthy_scope::test::cdr::cdr_returns_list_of_1_nil_when_called_on_list_of_2_nils ... ok
test evaluate::environment::mccarthy_scope::test::cdr::cdr_returns_list_of_2_last_items_when_called_on_list_of_3 ... ok
test evaluate::environment::mccarthy_scope::test::cdr::cdr_returns_list_of_last_item_when_called_on_list_of_2 ... ok
test evaluate::environment::mccarthy_scope::test::cdr::cdr_returns_nil_when_called_on_atom ... ok
test evaluate::environment::mccarthy_scope::test::cdr::cdr_returns_nil_when_called_on_list_of_1 ... ok
test evaluate::environment::mccarthy_scope::test::cdr::cdr_returns_nil_when_called_on_nil ... ok
test evaluate::environment::mccarthy_scope::test::cond::cond_considers_blank_string_to_be_truthy ... ok
test evaluate::environment::mccarthy_scope::test::cond::cond_considers_blank_symbol_to_be_truthy ... ok
test evaluate::environment::mccarthy_scope::test::cond::cond_considers_function_to_be_truthy ... ok
test evaluate::environment::mccarthy_scope::test::cond::cond_considers_list_to_be_truthy ... ok
test evaluate::environment::mccarthy_scope::test::atom::atom_returns_nil_when_called_on_rust_lambda ... ok
test evaluate::environment::mccarthy_scope::test::cond::cond_considers_macro_to_be_truthy ... ok
test evaluate::environment::mccarthy_scope::test::cond::cond_considers_nil_to_be_falsey ... ok
test evaluate::environment::mccarthy_scope::test::cond::cond_considers_number_to_be_truthy ... ok
test evaluate::environment::mccarthy_scope::test::cond::cond_considers_rust_function_to_be_truthy ... ok
test evaluate::environment::mccarthy_scope::test::cond::cond_considers_rust_macro_to_be_truthy ... ok
test evaluate::environment::mccarthy_scope::test::cond::cond_considers_symbol_to_be_truthy ... ok
test evaluate::environment::mccarthy_scope::test::cond::cond_considers_quote_to_be_truthy ... ok
test evaluate::environment::mccarthy_scope::test::cond::cond_considers_string_to_be_truthy ... ok
test evaluate::environment::mccarthy_scope::test::cond::cond_evaluates_to_2nd_val_when_1st_predicate_is_nil_and_2nd_is_truthy ... ok
test evaluate::environment::mccarthy_scope::test::cond::cond_evaluates_to_2nd_val_when_1st_predicate_is_nil_and_2nd_and_3rd_are_truthy ... ok
test evaluate::environment::mccarthy_scope::test::cond::cond_considers_zero_to_be_truthy ... ok
test evaluate::environment::mccarthy_scope::test::cond::cond_evaluates_to_3rd_val_when_1st_and_2nd_predicate_are_nil_and_3rd_is_truthy ... ok
test evaluate::environment::mccarthy_scope::test::cond::cond_evaluates_to_first_val_when_first_predicate_is_true_with_1_branch ... ok
test evaluate::environment::mccarthy_scope::test::cond::cond_evaluates_to_first_val_when_first_predicate_is_truthy_with_multi_branch ... ok
test evaluate::environment::mccarthy_scope::test::cond::cond_evaluates_to_nil_when_only_predicate_is_nil ... ok
test evaluate::environment::mccarthy_scope::test::cond::cond_returns_nil_when_called_with_no_args ... ok
test evaluate::environment::mccarthy_scope::test::cond::cond_returns_nil_when_truthy_predicate_does_not_have_expression_following_it ... ok
test evaluate::environment::mccarthy_scope::test::cond::cond_returns_nil_when_truthy_predicate_has_expression_that_returns_nil ... ok
test evaluate::environment::mccarthy_scope::test::cons::cons_creates_new_cons_cell_from_args ... ok
test evaluate::environment::mccarthy_scope::test::cond::cond_returns_second_arg_expression_value_when_truthy_predicate_is_followed_by_multiple_arguments ... ok
test evaluate::environment::mccarthy_scope::test::cond::cond_evaluates_to_nil_when_all_3_predicates_are_nil ... ok
test evaluate::environment::mccarthy_scope::test::cons::cons_creates_new_cons_cell_from_no_arg ... ok
test evaluate::environment::mccarthy_scope::test::cons::cons_creates_new_cons_cell_from_single_arg ... ok
test evaluate::environment::mccarthy_scope::test::cons::cons_creates_new_cons_cell_when_first_arg_is_list ... ok
test evaluate::environment::mccarthy_scope::test::cons::cons_creates_new_cons_cell_when_second_arg_is_an_atom ... ok
test evaluate::environment::mccarthy_scope::test::cons::cons_creates_new_cons_cell_when_first_arg_is_nil ... ok
test evaluate::environment::mccarthy_scope::test::defun::defun_adds_function_to_global_scope_with_nil_def_when_missing_def ... ok
test evaluate::environment::mccarthy_scope::test::defun::defun_adds_function_with_nil_def_and_args_to_global_scope_when_missing_def_and_args ... ok
test evaluate::environment::mccarthy_scope::test::defun::defun_adds_well_formed_function_to_global_scope ... ok
test evaluate::environment::mccarthy_scope::test::defun::defun_can_define_lambda_with_no_args ... ok
test evaluate::environment::mccarthy_scope::test::equal::equal_ignores_args_past_2nd ... ok
test evaluate::environment::mccarthy_scope::test::defun::defun_does_nothing_when_missing_function_name ... ok
test evaluate::environment::mccarthy_scope::test::equal::equal_returns_1_when_comparing_one_nil ... ok
test evaluate::environment::mccarthy_scope::test::equal::equal_returns_1_when_called_with_no_args ... ok
test evaluate::environment::mccarthy_scope::test::equal::equal_returns_1_when_comparing_two_nil ... ok
test evaluate::environment::mccarthy_scope::test::equal::equal_returns_1_when_comparing_two_same_numbers ... ok
test evaluate::environment::mccarthy_scope::test::equal::equal_returns_1_when_comparing_two_same_quote ... ok
test evaluate::environment::mccarthy_scope::test::equal::equal_returns_1_when_comparing_two_same_strings ... ok
test evaluate::environment::mccarthy_scope::test::cons::cons_creates_new_cons_cell_when_second_arg_is_list_of_multiple_items ... ok
test evaluate::environment::mccarthy_scope::test::equal::equal_returns_1_when_passed_2_samey_lists ... ok
test evaluate::environment::mccarthy_scope::test::equal::equal_returns_1_when_comparing_two_same_symbols ... ok
test evaluate::environment::mccarthy_scope::test::equal::equal_returns_nil_when_called_on_diff_types ... ok
test evaluate::environment::mccarthy_scope::test::equal::equal_returns_nil_when_called_on_rust_function ... ok
test evaluate::environment::mccarthy_scope::test::equal::equal_returns_nil_when_called_on_macro ... ok
test evaluate::environment::mccarthy_scope::test::equal::equal_returns_nil_when_comparing_one_number ... ok
test evaluate::environment::mccarthy_scope::test::equal::equal_returns_nil_when_called_on_rust_macro ... ok
test evaluate::environment::mccarthy_scope::test::equal::equal_returns_nil_when_comparing_one_string ... ok
test evaluate::environment::mccarthy_scope::test::equal::equal_returns_nil_when_comparing_one_symbol ... ok
test evaluate::environment::mccarthy_scope::test::equal::equal_returns_nil_when_comparing_two_diff_quote ... ok
test evaluate::environment::mccarthy_scope::test::equal::equal_returns_nil_when_comparing_one_quote ... ok
test evaluate::environment::mccarthy_scope::test::equal::equal_returns_nil_when_comparing_two_diff_strings ... ok
test evaluate::environment::mccarthy_scope::test::equal::equal_returns_nil_when_comparing_two_diff_symbols ... ok
test evaluate::environment::mccarthy_scope::test::equal::equal_returns_nil_when_comparing_two_diff_numbers ... ok
test evaluate::environment::mccarthy_scope::test::equal::equal_returns_nil_when_passed_2_different_lists ... ok
test evaluate::environment::mccarthy_scope::test::equal::equal_returns_nil_when_first_or_second_arg_is_function ... ok
test evaluate::environment::mccarthy_scope::test::all_mccarthy_functions_are_defined ... FAILED
test evaluate::environment::mccarthy_scope::test::label::label_missing_all_args_returns_nil ... FAILED
test evaluate::environment::mccarthy_scope::test::label::correctly_formed_returns_label ... FAILED
test evaluate::environment::mccarthy_scope::test::lambda::lambda_with_1_arg_and_def_produces_function ... ok
test evaluate::environment::mccarthy_scope::test::lambda::lambda_with_2_arg_and_def_produces_function ... ok
test evaluate::environment::mccarthy_scope::test::lambda::lambda_with_2_arg_and_function_def_produces_function ... ok
test evaluate::environment::mccarthy_scope::test::lambda::lambda_with_2_arg_and_macro_def_produces_function ... ok
test evaluate::environment::mccarthy_scope::test::lambda::lambda_with_2_arg_and_nil_def_produces_function ... ok
test evaluate::environment::mccarthy_scope::test::lambda::lambda_with_2_arg_and_no_def_produces_function ... ok
test evaluate::environment::mccarthy_scope::test::lambda::lambda_with_2_arg_and_number_def_produces_function ... ok
test evaluate::environment::mccarthy_scope::test::lambda::lambda_with_2_arg_and_quote_def_produces_function ... ok
test evaluate::environment::mccarthy_scope::test::lambda::lambda_with_2_arg_and_rust_function_def_produces_function ... ok
test evaluate::environment::mccarthy_scope::test::lambda::lambda_with_2_arg_and_rust_macro_def_produces_function ... ok
test evaluate::environment::mccarthy_scope::test::lambda::lambda_with_2_arg_and_string_def_produces_function ... ok
test evaluate::environment::mccarthy_scope::test::lambda::lambda_with_2_arg_and_symbol_def_produces_function ... ok
test evaluate::environment::mccarthy_scope::test::lambda::lambda_with_3_arg_and_def_produces_function ... ok
test evaluate::environment::mccarthy_scope::test::lambda::lambda_with_no_args_and_no_def_produces_function ... ok
test evaluate::environment::mccarthy_scope::test::label::label_with_non_symbol_arg2_returns_nil ... FAILED
test evaluate::environment::mccarthy_scope::test::lambda::lambda_with_non_list_args_returns_function_that_takes_no_args ... ok
test evaluate::environment::mccarthy_scope::test::label::label_with_non_procedure_arg3_returns_nil ... FAILED
test evaluate::environment::mccarthy_scope::test::not::not_is_valid_code ... ok
test evaluate::environment::mccarthy_scope::test::lambda::lambda_with_0_arg_and_def_produces_function ... ok
test evaluate::environment::mccarthy_scope::test::not::not_returns_1_when_passed_nil_arg ... ok
test evaluate::environment::mccarthy_scope::test::not::not_ignnotes_extra_args ... ok
test evaluate::environment::mccarthy_scope::test::nil::nil_is_empty_list ... ok
test evaluate::environment::mccarthy_scope::test::not::not_returns_nil_when_passed_non_nil_arg ... ok
test evaluate::environment::mccarthy_scope::test::null::null_is_valid_code ... ok
test evaluate::environment::mccarthy_scope::test::null::null_returns_1_when_passed_nil ... ok
test evaluate::environment::mccarthy_scope::test::not::not_returns_1_when_passed_no_args ... ok
test evaluate::environment::mccarthy_scope::test::null::null_returns_1_when_passed_no_args ... ok
test evaluate::environment::mccarthy_scope::test::or::or_is_valid_code ... ok
test evaluate::environment::mccarthy_scope::test::null::null_ignores_extra_args ... ok
test evaluate::environment::mccarthy_scope::test::or::or_ignores_extra_args ... ok
test evaluate::environment::mccarthy_scope::test::null::null_returns_nil_when_passed_non_nil ... ok
test evaluate::environment::mccarthy_scope::test::or::or_returns_2nd_arg_when_passed_1_nil_arg_and_1_non_nil ... ok
test evaluate::environment::mccarthy_scope::test::or::or_returns_arg_when_passed_non_nil_arg ... ok
test evaluate::environment::mccarthy_scope::test::or::or_returns_first_arg_when_passed_1_non_nil_arg_and_1_nil ... ok
test evaluate::environment::mccarthy_scope::test::quote::quote_function_returns_quoted_function ... ok
test evaluate::environment::mccarthy_scope::test::quote::quote_list_returns_quoted_list ... ok
test evaluate::environment::mccarthy_scope::test::quote::quote_list_with_sublists_returns_quoted_list_with_sublists ... ok
test evaluate::environment::mccarthy_scope::test::quote::quote_macro_returns_quoted_macro ... ok
test evaluate::environment::mccarthy_scope::test::quote::quote_nothing_returns_quoted_nil ... ok
test evaluate::environment::mccarthy_scope::test::quote::quote_number_returns_quoted_number ... ok
test evaluate::environment::mccarthy_scope::test::quote::quote_quote_returns_quoted_quote ... ok
test evaluate::environment::mccarthy_scope::test::or::or_returns_nil_when_passed_1_nil_args ... ok
test evaluate::environment::mccarthy_scope::test::quote::quote_rust_macro_returns_quoted_rust_macro ... ok
test evaluate::environment::mccarthy_scope::test::quote::quote_rust_function_returns_quoted_rust_function ... ok
test evaluate::environment::mccarthy_scope::test::quote::quote_string_returns_quoted_string ... ok
test evaluate::environment::mccarthy_scope::test::quote::quote_symbol_returns_quoted_symbol ... ok
test evaluate::environment::test::defun_adds_global_not_scope ... ok
test evaluate::environment::test::delete_removes_from_last_in_scope ... ok
test evaluate::environment::mccarthy_scope::test::t::t_is_1 ... ok
test evaluate::environment::test::env_can_define_global_vars ... ok
test evaluate::environment::test::env_can_get_bindings_defined_in_scope_higher_than_current ... ok
test evaluate::environment::mccarthy_scope::test::or::or_returns_first_arg_when_passed_2_non_nil_args ... ok
test evaluate::environment::test::env_can_get_bindings_defined_in_current_scope ... ok
test evaluate::environment::test::env_can_shadow_already_defined_bindings ... ok
test evaluate::environment::test::env_returns_nil_for_undefined_bindings ... ok
test evaluate::environment::test::global_shadows_lib ... ok
test evaluate::environment::test::env_initializes_with_a_scope ... ok
test evaluate::environment::mccarthy_scope::test::or::or_returns_nil_when_passed_no_args ... ok
test evaluate::environment::test::push_lib_pushes_to_lib_not_local ... ok
test evaluate::environment::test::local_shadows_lib ... ok
test evaluate::environment::test::set_adds_to_last_in_scope ... ok
test evaluate::test::eval_all_on_empty ... ok
test evaluate::test::eval_all_on_one_atom ... ok
test evaluate::test::eval_all_on_multiple_sxref ... ok
test evaluate::test::eval_defined_symbol_returns_definition ... ok
test evaluate::test::eval_all_on_one_sxref ... ok
test evaluate::test::eval_list_with_literal_as_first_arg_returns_error ... ok
test evaluate::test::eval_list_with_macro_as_first_arg_evals_macro ... ok
test evaluate::test::eval_all_env_persists_between_sxref ... ok
test evaluate::test::eval_list_with_fn_as_first_arg_evals_fn ... ok
test evaluate::test::eval_list_with_undefined_symbol_as_first_arg_returns_error ... ok
test evaluate::test::eval_number_returns_number ... ok
test evaluate::test::eval_quoted_list_returns_list ... ok
test evaluate::test::eval_quoted_number_returns_number ... ok
test evaluate::test::eval_nil_returns_nil ... ok
test evaluate::test::eval_quoted_string_returns_string ... ok
test evaluate::test::eval_quoted_symbol_returns_symbol ... ok
test parse::lexical_analysis::test::backslash_does_not_escape_in_symbol ... ok
test evaluate::test::eval_string_returns_string ... ok
test parse::lexical_analysis::test::backslash_escapes_char_in_string ... ok
test evaluate::test::eval_undefined_symbol_returns_nil ... ok
test parse::lexical_analysis::test::blank_text_is_okay ... ok
test parse::lexical_analysis::test::dot_as_part_of_atom_does_not_parse_into_dot_token ... ok
test parse::lexical_analysis::test::backslash_escapes_double_quote_in_string ... ok
test parse::lexical_analysis::test::lone_dot_parses_into_dot_token ... ok
test parse::lexical_analysis::test::nil_list_works ... ok
test parse::lexical_analysis::test::multiline_comment ... ok
test parse::lexical_analysis::test::ignores_comments ... ok
test parse::lexical_analysis::test::parse_blank_string ... ok
test parse::lexical_analysis::test::parse_multiple_strings ... ok
test parse::lexical_analysis::test::parse_negative_number_works ... ok
test parse::lexical_analysis::test::parse_number_in_quote_works ... ok
test parse::lexical_analysis::test::parse_number_works ... ok
test parse::lexical_analysis::test::parse_quote_as_not_first_in_list_works ... ok
test parse::lexical_analysis::test::parse_quote_works ... ok
test parse::lexical_analysis::test::parse_simple_string ... ok
test parse::lexical_analysis::test::parse_string_with_spaces ... ok
test parse::lexical_analysis::test::parse_string_with_symbol_and_list ... ok
test parse::lexical_analysis::test::parse_backslash_in_string_works ... ok
test parse::lexical_analysis::test::parse_works ... ok
test parse::lexical_analysis::test::parses_multiple_root_lists ... ok
test parse::lexical_analysis::test::single_backslash_symbol ... ok
test parse::lexical_analysis::test::symbol_can_contain_1_double_quote ... ok
test parse::lexical_analysis::test::symbol_can_contain_2_double_quote ... ok
test parse::lexical_analysis::test::unterminated_string_error_location_is_correct ... ok
test parse::semantic_analysis::test::dot_as_last_item_in_list ... ok
test parse::semantic_analysis::test::dot_as_not_last_item_in_last ... ok
test parse::semantic_analysis::test::dot_as_only_item_in_list ... ok
test parse::semantic_analysis::test::dot_with_no_car ... ok
test parse::lexical_analysis::test::parse_triple_quote_returns_error - should panic ... ok
test parse::semantic_analysis::test::dot_with_no_cdr ... ok
test parse::lexical_analysis::test::parse_unclosed_double_quote_returns_error - should panic ... ok
test parse::semantic_analysis::test::multiple_syntaxes ... ok
test parse::semantic_analysis::test::dot_with_no_cdr_or_car ... ok
test parse::semantic_analysis::test::one_syntax ... ok
test parse::semantic_analysis::test::parse_syn_blank ... ok
test parse::semantic_analysis::test::parse_syn_empty_list ... ok
test parse::semantic_analysis::test::parse_syn_number ... ok
test parse::semantic_analysis::test::parse_syn_string ... ok
test parse::semantic_analysis::test::parse_syn_symbol ... ok
test parse::semantic_analysis::test::no_syntaxes ... ok
test parse::syntactic_analysis::test::dot_as_last ... ok
test parse::syntactic_analysis::test::dot_as_last_item_in_list ... ok
test parse::syntactic_analysis::test::dot_as_second_last_item_in_list ... ok
test parse::syntactic_analysis::test::dot_with_car_and_cdr ... ok
test parse::syntactic_analysis::test::dot_with_car_but_no_cdr ... ok
test parse::syntactic_analysis::test::dot_with_cdr_but_no_car ... ok
test parse::syntactic_analysis::test::dot_with_list_after ... ok
test parse::syntactic_analysis::test::dot_with_more_than_one_item_after_it_in_list ... ok
test parse::syntactic_analysis::test::dot_with_no_car_and_no_cdr ... ok
test parse::syntactic_analysis::test::double_dot ... ok
test parse::syntactic_analysis::test::free_atom_after_list ... ok
test parse::syntactic_analysis::test::free_atom_before_list ... ok
test parse::syntactic_analysis::test::missing_open_list ... ok
test parse::syntactic_analysis::test::multiple_root_lists ... ok
test parse::syntactic_analysis::test::parse_empty_symbols_list_succeeds ... ok
test parse::syntactic_analysis::test::parse_list_works ... ok
test parse::syntactic_analysis::test::parse_missing_close_root_list_fails ... ok
test parse::syntactic_analysis::test::parse_nil_list_works ... ok
test parse::syntactic_analysis::test::parse_number_works ... ok
test parse::syntactic_analysis::test::parse_quote_as_not_first_value_in_list ... ok
test parse::syntactic_analysis::test::parse_quote_works ... ok
test parse::syntactic_analysis::test::parse_string_works ... ok
test parse::syntactic_analysis::test::parse_works ... ok
test parse::syntactic_analysis::test::quote_at_end_of_token_list_fails ... ok
test parse::syntactic_analysis::test::quote_before_close_list_fails ... ok
test parse::syntactic_analysis::test::single_free_atom ... ok
test parse::syntactic_analysis::test::unmatched_close_parenthesis_fails ... ok
test parse::syntactic_analysis::test::unmatched_open_parenthesis_fails ... ok
test parse::test::full_parse ... ok
test s_expression::cons_cell::test::display_on_cons_cell_with_non_list_cdr_uses_dot_infix_notation ... ok
test s_expression::cons_cell::test::display_on_list_with_last_cons_cell_with_non_list_cdr_uses_dot_infix_notation ... ok
test s_expression::cons_cell::test::display_works ... ok
test s_expression::cons_cell::test::iter_works ... ok
[SExpressionRef(ConsCell(ConsCell { car: SExpressionRef(Symbol("label")), cdr: SExpressionRef(ConsCell(ConsCell { car: SExpressionRef(Symbol("first-atom")), cdr: SExpressionRef(ConsCell(ConsCell { car: SExpressionRef(ConsCell(ConsCell { car: SExpressionRef(Symbol("lambda")), cdr: SExpressionRef(ConsCell(ConsCell { car: SExpressionRef(ConsCell(ConsCell { car: SExpressionRef(Symbol("x")), cdr: SExpressionRef(Nil) })), cdr: SExpressionRef(ConsCell(ConsCell { car: SExpressionRef(ConsCell(ConsCell { car: SExpressionRef(Symbol("cond")), cdr: SExpressionRef(ConsCell(ConsCell { car: SExpressionRef(ConsCell(ConsCell { car: SExpressionRef(ConsCell(ConsCell { car: SExpressionRef(Symbol("atom")), cdr: SExpressionRef(ConsCell(ConsCell { car: SExpressionRef(Symbol("x")), cdr: SExpressionRef(Nil) })) })), cdr: SExpressionRef(ConsCell(ConsCell { car: SExpressionRef(Symbol("x")), cdr: SExpressionRef(Nil) })) })), cdr: SExpressionRef(ConsCell(ConsCell { car: SExpressionRef(ConsCell(ConsCell { car: SExpressionRef(Number(1)), cdr: SExpressionRef(ConsCell(ConsCell { car: SExpressionRef(ConsCell(ConsCell { car: SExpressionRef(Symbol("first-atom")), cdr: SExpressionRef(ConsCell(ConsCell { car: SExpressionRef(Quote(SExpressionRef(ConsCell(ConsCell { car: SExpressionRef(Symbol("car")), cdr: SExpressionRef(ConsCell(ConsCell { car: SExpressionRef(Symbol("x")), cdr: SExpressionRef(Nil) })) })))), cdr: SExpressionRef(Nil) })) })), cdr: SExpressionRef(Nil) })) })), cdr: SExpressionRef(Nil) })) })) })), cdr: SExpressionRef(Nil) })) })) })), cdr: SExpressionRef(Nil) })) })) }))]
Some("first-atom")
SExpressionRef(ConsCell(ConsCell { car: SExpressionRef(Symbol("lambda")), cdr: SExpressionRef(ConsCell(ConsCell { car: SExpressionRef(ConsCell(ConsCell { car: SExpressionRef(Symbol("x")), cdr: SExpressionRef(Nil) })), cdr: SExpressionRef(ConsCell(ConsCell { car: SExpressionRef(ConsCell(ConsCell { car: SExpressionRef(Symbol("cond")), cdr: SExpressionRef(ConsCell(ConsCell { car: SExpressionRef(ConsCell(ConsCell { car: SExpressionRef(ConsCell(ConsCell { car: SExpressionRef(Symbol("atom")), cdr: SExpressionRef(ConsCell(ConsCell { car: SExpressionRef(Symbol("x")), cdr: SExpressionRef(Nil) })) })), cdr: SExpressionRef(ConsCell(ConsCell { car: SExpressionRef(Symbol("x")), cdr: SExpressionRef(Nil) })) })), cdr: SExpressionRef(ConsCell(ConsCell { car: SExpressionRef(ConsCell(ConsCell { car: SExpressionRef(Number(1)), cdr: SExpressionRef(ConsCell(ConsCell { car: SExpressionRef(ConsCell(ConsCell { car: SExpressionRef(Symbol("first-atom")), cdr: SExpressionRef(ConsCell(ConsCell { car: SExpressionRef(Quote(SExpressionRef(ConsCell(ConsCell { car: SExpressionRef(Symbol("car")), cdr: SExpressionRef(ConsCell(ConsCell { car: SExpressionRef(Symbol("x")), cdr: SExpressionRef(Nil) })) })))), cdr: SExpressionRef(Nil) })) })), cdr: SExpressionRef(Nil) })) })), cdr: SExpressionRef(Nil) })) })) })), cdr: SExpressionRef(Nil) })) })) }))
LispFunction { args: ["x"], definition: SExpressionRef(ConsCell(ConsCell { car: SExpressionRef(Symbol("cond")), cdr: SExpressionRef(ConsCell(ConsCell { car: SExpressionRef(ConsCell(ConsCell { car: SExpressionRef(ConsCell(ConsCell { car: SExpressionRef(Symbol("atom")), cdr: SExpressionRef(ConsCell(ConsCell { car: SExpressionRef(Symbol("x")), cdr: SExpressionRef(Nil) })) })), cdr: SExpressionRef(ConsCell(ConsCell { car: SExpressionRef(Symbol("x")), cdr: SExpressionRef(Nil) })) })), cdr: SExpressionRef(ConsCell(ConsCell { car: SExpressionRef(ConsCell(ConsCell { car: SExpressionRef(Number(1)), cdr: SExpressionRef(ConsCell(ConsCell { car: SExpressionRef(ConsCell(ConsCell { car: SExpressionRef(Symbol("first-atom")), cdr: SExpressionRef(ConsCell(ConsCell { car: SExpressionRef(Quote(SExpressionRef(ConsCell(ConsCell { car: SExpressionRef(Symbol("car")), cdr: SExpressionRef(ConsCell(ConsCell { car: SExpressionRef(Symbol("x")), cdr: SExpressionRef(Nil) })) })))), cdr: SExpressionRef(Nil) })) })), cdr: SExpressionRef(Nil) })) })), cdr: SExpressionRef(Nil) })) })) })) }
[SExpressionRef(ConsCell(ConsCell { car: SExpressionRef(Symbol("label")), cdr: SExpressionRef(ConsCell(ConsCell { car: SExpressionRef(Symbol("foo")), cdr: SExpressionRef(ConsCell(ConsCell { car: SExpressionRef(ConsCell(ConsCell { car: SExpressionRef(Symbol("lambda")), cdr: SExpressionRef(ConsCell(ConsCell { car: SExpressionRef(ConsCell(ConsCell { car: SExpressionRef(Symbol("x")), cdr: SExpressionRef(Nil) })), cdr: SExpressionRef(ConsCell(ConsCell { car: SExpressionRef(ConsCell(ConsCell { car: SExpressionRef(Symbol("cons")), cdr: SExpressionRef(ConsCell(ConsCell { car: SExpressionRef(Symbol("x")), cdr: SExpressionRef(ConsCell(ConsCell { car: SExpressionRef(Quote(SExpressionRef(ConsCell(ConsCell { car: SExpressionRef(Symbol("x")), cdr: SExpressionRef(ConsCell(ConsCell { car: SExpressionRef(Nil), cdr: SExpressionRef(Nil) })) })))), cdr: SExpressionRef(Nil) })) })) })), cdr: SExpressionRef(Nil) })) })) })), cdr: SExpressionRef(Nil) })) })) }))]
Some("foo")
SExpressionRef(ConsCell(ConsCell { car: SExpressionRef(Symbol("lambda")), cdr: SExpressionRef(ConsCell(ConsCell { car: SExpressionRef(ConsCell(ConsCell { car: SExpressionRef(Symbol("x")), cdr: SExpressionRef(Nil) })), cdr: SExpressionRef(ConsCell(ConsCell { car: SExpressionRef(ConsCell(ConsCell { car: SExpressionRef(Symbol("cons")), cdr: SExpressionRef(ConsCell(ConsCell { car: SExpressionRef(Symbol("x")), cdr: SExpressionRef(ConsCell(ConsCell { car: SExpressionRef(Quote(SExpressionRef(ConsCell(ConsCell { car: SExpressionRef(Symbol("x")), cdr: SExpressionRef(ConsCell(ConsCell { car: SExpressionRef(Nil), cdr: SExpressionRef(Nil) })) })))), cdr: SExpressionRef(Nil) })) })) })), cdr: SExpressionRef(Nil) })) })) }))
LispFunction { args: ["x"], definition: SExpressionRef(ConsCell(ConsCell { car: SExpressionRef(Symbol("cons")), cdr: SExpressionRef(ConsCell(ConsCell { car: SExpressionRef(Symbol("x")), cdr: SExpressionRef(ConsCell(ConsCell { car: SExpressionRef(Quote(SExpressionRef(ConsCell(ConsCell { car: SExpressionRef(Symbol("x")), cdr: SExpressionRef(ConsCell(ConsCell { car: SExpressionRef(Nil), cdr: SExpressionRef(Nil) })) })))), cdr: SExpressionRef(Nil) })) })) })) }
test s_expression::function::label_function::test::from_string ... ok
FUNCTION
test evaluate::environment::test::local_shadows_global ... ok
test s_expression::function::label_function::test::function_returns_function ... ok
test s_expression::function::label_function::test::gets_correct_label_and_function_when_made_from_sxref ... ok
[SExpressionRef(ConsCell(ConsCell { car: SExpressionRef(Symbol("label")), cdr: SExpressionRef(Nil) }))]
None
SExpressionRef(Nil)
LispFunction { args: [], definition: SExpressionRef(Nil) }
test s_expression::function::label_function::test::str_that_is_missing_args_work ... ok
test s_expression::function::label_function::test::bad_lisp_fails_to_become_function - should panic ... ok
test s_expression::function::label_function::test::label_returns_label ... ok
test s_expression::function::lisp_function::test::args_is_none_when_passed_sxref_with_nil_args ... ok
test s_expression::function::lisp_function::test::args_is_none_when_passed_sxref_with_non_list_args ... ok
test s_expression::function::lisp_function::test::args_returns_list_of_args ... ok
test s_expression::function::lisp_function::test::definition_returns_lambda_definition ... ok
test s_expression::function::lisp_function::test::execute_works ... ok
test s_expression::function::lisp_function::test::from_string_works ... ok
test s_expression::function::lisp_function::test::gets_correct_args_and_def_when_function_made_from_sxref ... ok
test s_expression::function::lisp_function::test::bad_lisp_fails_to_become_function - should panic ... ok
test s_expression::function::rust_function::test::execute_works ... ok
test s_expression::function::lisp_function::test::str_that_are_missing_args_work ... ok
test s_expression::r#macro::lisp_macro::test::args_is_none_when_passed_sxref_with_nil_args ... ok
test s_expression::r#macro::lisp_macro::test::args_is_none_when_passed_sxref_with_non_list_args ... ok
test s_expression::r#macro::lisp_macro::test::from_string_works ... ok
test s_expression::r#macro::lisp_macro::test::gets_correct_args_and_def_when_function_made_from_sxref ... ok
test s_expression::r#macro::lisp_macro::test::str_that_are_missing_args_work ... ok
test s_expression::s_expression_ref::test::from_iter_returns_args_in_correct_order ... ok
test s_expression::s_expression_ref::test::iter_on_non_list ... ok
test s_expression::s_expression_ref::test::iter_works ... ok
test s_expression::s_expression_ref::test::len_works_on_list ... ok
test s_expression::s_expression_ref::test::len_works_on_non_list ... ok
test s_expression::s_expression_ref::test::sxref_from_empty_list_is_nil ... ok
test s_expression::util::test::car_works_on_list_of_2 ... ok
test s_expression::util::test::car_works_on_list_of_3 ... ok
test s_expression::util::test::car_works_on_list_starting_with_list ... ok
test s_expression::util::test::car_works_on_list_starting_with_nil ... ok
test s_expression::util::test::car_works_on_nil ... ok
test s_expression::util::test::car_works_on_string ... ok
test s_expression::util::test::car_works_on_number ... ok
test s_expression::util::test::car_works_on_symbol ... ok
test s_expression::util::test::cdr_works_on_atom ... ok
test s_expression::util::test::cdr_works_on_list_of_1 ... ok
test s_expression::util::test::cdr_works_on_list_of_2 ... ok
test s_expression::util::test::cdr_works_on_list_of_3 ... ok
test s_expression::util::test::cdr_works_on_nil ... ok
test s_expression::util::test::cons_appends_list_to_list ... ok
test s_expression::r#macro::lisp_macro::test::bad_lisp_fails_to_become_macro - should panic ... ok
test s_expression::util::test::cons_can_append_nil_to_list ... ok
test s_expression::util::test::cons_number_appended_to_cons_cell ... ok
test s_expression::util::test::cons_number_appended_to_nil ... ok
test s_expression::util::test::cons_can_append_nil_to_nil ... ok
test s_expression::util::test::cons_works_on_numbers ... ok
test s_expression::util::test::push_appends_item_to_list ... ok
test s_expression::util::test::push_appends_item_to_nil ... ok
test s_expression::util::test::push_appends_list_to_list ... ok
test s_expression::util::test::push_appends_item_to_atom_as_new_list ... ok
test test::comments ... ok
test test::list_fns ... ok
test test::dot_notation ... ok
test test::pipe ... ok
test test::multi_root_list ... ok
